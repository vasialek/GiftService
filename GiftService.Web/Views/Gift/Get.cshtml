@model GiftService.Models.ProductInformationModel

@{

    ViewBag.Title = String.Concat(Model.Pos.Name, " - ", Model.Product.ProductName);

    var friendEmail = new GiftService.Web.Models.Gifts.GiftToFriendModel();
    friendEmail.ProductUid = Model.Product.ProductUid;
    if (String.IsNullOrEmpty(friendEmail.FriendEmail))
    {
        friendEmail.FriendEmail = Model.Product.CustomerEmail;
    }
}

@Html.DisplayTempMessage()

<div class="row">
    <div class="col-md-10 col-md-offset-1">
        <h2>@Model.Pos.PosUrl.Host</h2>
    </div>
</div>
<div class="row">
    <div id="GiftFinancial" class="col-md-1">
        @*<div>
            Order # @Model.Product.Id
        </div>*@
    </div>
    <div id="GiftInfo" class="col-md-5">
        <p>
            @Resources.Language.Gift_Get_ServiceLabel<br />
            <strong>@Html.Raw(Model.Product.ProductName)<br /></strong>
            @Html.DisplayOrNotSet(Model.Product.ProductDescription, Resources.Language.Gift_Get_NoDescription)</p>

        <p>
            @Resources.Language.Gift_Get_ProductDurationLabel
            @Html.DisplayOrNotSet(Model.Product.ProductDuration, Resources.Language.Payment_Checkout_DurationNotSet)
        </p>

        <p>@Html.Raw(Model.PosAddress)
            <i class="glyphicon glyphicon-globe" style="color: @(Model.HasLatLng ? "#077117" : "#ddd"); vertical-align: baseline; cursor: pointer;" data-latlng="@Model.Product.PosLatLng.LatLngString" data-title="@Model.PosAddress" title="@Model.PosAddress"> </i>
        </p>
        
        @*<div>Price: @Model.Product.ProductPrice.ToString("N2") @Model.Product.CurrencyCode</div>*@
        
        @if (Model.IsPaidOk)
        {
            <div>
                @Resources.Language.Gift_Get_CouponIsValidTill @Model.Product.ValidTill.ToShortDateString()
            </div>
            <p class=""><span style="color: #f00;">@Resources.Language.Gift_Get_YouMustReserve</span><br />
                @Html.Raw(String.Join("<br />", new string[] { Model.Product.PhoneForReservation, Model.Product.EmailForReservation }))
            </p>
        }

        @*<p>@Resources.Language.Gift_Get_ThankYouForUsingUs</p>*@
    </div>
    <div id="GiftActions" class="col-md-5">
        @if (Model.IsPaidOk)
        {
            <div class="btn-group-vertical">
                <button class="btn btn-info">@Resources.Language.Gift_Get_PaidAt
                @Model.PaymentDate.ToShortDateString()</button>
                <button id="BtnDownload" class="btn btn-default">@Resources.Language.Gift_Get_DownloadCoupon</button>
                <button id="BtnPrint" class="btn btn-default">@Resources.Language.Gift_Get_PrintCoupon</button>
                <button id="BtnGift" class="btn btn-default">@Resources.Language.Gift_Get_CouponByEmail</button>
            </div>
            <div id="CongratsDiv" class="panel panel-group" style="display: none;">
                @using (Html.BeginForm("Friend", "Gift", FormMethod.Post, new { id = "FriendForm" }))
                {
                    @Html.HiddenFor(x => friendEmail.ProductUid)
                    <div class="panel-body">
                        <label for="email">@Resources.Language.Gift_Get_GiftEmailLabel</label>
                        @Html.TextBoxFor(x => friendEmail.FriendEmail, new { type = "email", placeholder = "Enter e-mail", @class="input-sm form-control" })
                        @Html.ValidationMessageFor(x => friendEmail.FriendEmail)
                        @*<textarea name="Text" placeholder="@Resources.Language.Gift_Get_EnterCongratulations" class="input-sm form-control" maxlength="230"></textarea><br />*@

                        @Html.TextAreaFor(x => friendEmail.Text, new { placeholder = Resources.Language.Gift_Get_EnterCongratulations, @class="input-sm form-control", maxlength="230" })
                        @Html.ValidationMessageFor(x => friendEmail.Text)
                        <br />

                        <button name="BtnEmailGift" id="BtnEmailGift" class="btn btn-xs btn-primary">@Resources.Language.Gift_Get_ButtonSendAsEmail</button>
                        <button name="BtnDownloadGift" id="BtnDownloadGift" class="btn btn-xs btn-primary">@Resources.Language.Gift_Get_ButtonDownloadAsPdf</button>
                    </div>
                }
            </div>
        }
        else if (Model.PaymentStatus == GiftService.Models.PaymentStatusIds.AcceptedButNotExecuted)
        {
            <div class="alert alert-warning text-center">
                @Resources.Language.Gift_Get_PaymentIsProcessing
            </div>
        }else
        {
            <div class="alert alert-danger text-center">
                @Resources.Language.Gift_Get_PaymentWasNot
            </div>
        }


    </div>
</div>

<div class="row">
    <div class="col-md-5 col-md-offset-1">@Resources.Language.Gift_Get_ThankYouForUsingUs</div>
</div>

<div class="modal fade" id="MapDiv" tabindex="-1" role="dialog" aria-labelledby="basicModal" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="MapTitle">Map window</h4>
            </div>
            <div class="modal-body text-center" id="MapImage">

            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
                </div>*@
        </div>
    </div>
</div>


@section scripts
{
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/map.js"></script>
    <script type="text/javascript">

        $(function () {
            $("#BtnPrint").click(function (e) {
                e.preventDefault();
                window.location.href = "@Url.Action("Print", "Gift", new { id = Model.Product.ProductUid })";
            });
            $("#BtnDownload").click(function (e) {
                e.preventDefault();
                window.location.href = "@Url.Action("Download", "Gift", new { id = Model.Product.ProductUid })";
            });
            @*$("#BtnDownloadGift").click(function (e) {
                e.preventDefault();
                window.location.href = "@Url.Action("Friend", "Gift", new { id = Model.Product.ProductUid })";
            });*@
            $("#BtnEmailGift").click(function (e) {
                e.preventDefault();
                Gift.sendGiftEmail();
            });

            $("#BtnGift").click(function (e) {
                e.preventDefault();
                $("#CongratsDiv").toggle();
            })
        });

        var Gift = {
            isSent: true,

            sendGiftEmail: function () {
                if (this.isSent) {
                    this.isSent = false;

                    var self = this;

                    $.ajax({
                        url: "@Url.Action("EmailFriend", "Gift")",
                        method: "POST",
                        data: $("#FriendForm").serialize(),
                        success: function (data) {
                            if (data.Status == true) {
                                $("#FriendForm").html(data.Message);
                                $("#BtnEmailGift").remove();
                            } else {
                                self.displayError(data.Message.length > 0 ? data.Message : "Error sending e-mail");
                            }
                        },
                        error: function (x) {
                            self.displayError("@Resources.Language.SystemMessage_WeWillContactYouOnError");
                        },
                        complete: function () {
                            self.isSent = true;
                        }
                    });
                }
            },

            displayError: function (msg) {
                alert(msg);
            }
        };

        @Html.Raw(Model.HasLatLng ? "GsMap.bindToLatLng('i.glyphicon-globe');" : "" )

    </script>


    @*@Scripts.Render("~/bundles/jqueryval")*@

}
