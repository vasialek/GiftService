@model IEnumerable<GiftService.Models.Logs.LogBdo>

<style>
    #Logs th {
        font-size: smaller;
    }

    #Logs td {
        padding-top: 1px;
        padding-bottom: 1px;
        font-size: x-small;
    }

    .gs-debug {
        color: darkgray;
    }

    .gs-error {
        color: red;
    }

    .gs-warn {
        color: orangered;
    }

    .gs-fatal {
        background-color: red;
    }
</style>

<div class="container">
    @Html.LoaderDiv()
    <div class="btn btn-group">
        <button id="BtnParseRequestPs" class="btn btn-sm btn-success">Parse Paysera request data</button>
        <button id="BtnParsePs" class="btn btn-sm btn-primary">Parse Paysera response data</button>
    </div>
    <div id="ResponsePopup" style="display: none;">
        <div class="text-right">
            <button id="BtnCloseResponse">x</button>
        </div>
        <div id="ResponseMessage" class="alert"></div>
        <div id="ResponseDiv"></div>
    </div>
    <table id="Logs" class="table table-condensed table-hover table-bordered table-striped">
        <tr>
            <th>ID</th>
            <th>Level</th>
            <th>Date</th>
            <th>Thread</th>
            <th>Message</th>
        </tr>

        @foreach (var l in Model)
            {
            <tr>
                <td>@l.Id</td>
                <td>@l.Level</td>
                <td nowrap>@l.CreatedAtServer</td>
                <td>@l.Thread</td>
                <td class="gs-@l.Level.ToLower()">@l.Message</td>
            </tr>
            if (String.IsNullOrEmpty(l.Exception) == false)
            {
                <tr>
                    <td colspan="5">@l.Exception</td>
                </tr>
            }
        }

    </table>
</div>

@section scripts {

    <script type="text/javascript">
        $(function () {
            $("#BtnParseRequestPs").click(function (e) {
                e.preventDefault();
                if (psData = prompt("Input request data to PS")) {
                    getParsedPs("PsRq", psData);
                }
            });

            $("#BtnParsePs").click(function (e) {
                e.preventDefault();
                if (psData = prompt("Input response data to PS")) {
                    getParsedPs("PsResp", psData);
                }
                @*if (data = prompt("Input data from PS")) {
                    $.post("@Url.Action("DoParsePs", "TranAdmin")", "data=" + data, function (data) {
                        $("#ResponseDiv").html(data.Response);
                        $("#ResponsePopup").show();
                        $("#ResponseMessage")
                            .removeClass("alert-danger")
                            .removeClass("alert-success")
                            .addClass(data.Status ? "alert-success" : "alert-danger")
                            .html(data.Message);
                        //console.log(data.Response);
                    }).error(function () {
                        alert("Error parsing PS data");
                    }).always(function () {
                        $("#LoaderDiv").hide();
                    });
                }*@
            });

            $("#BtnCloseResponse").click(function (e) {
                e.preventDefault();
                $("#ResponsePopup").hide();
            })
        });

        function getParsedPs(dataType, psData) {
            var url = "";
            switch (dataType) {
                case "PsRq":
                    url = "@Url.Action("DoParsePsRequest", "TranAdmin")";
                    break;
                case "PsResp":
                    url = "@Url.Action("DoParsePs", "TranAdmin")";
                    break;
                default:
                    alert("Bad data type to parse: " + dataType);
                    return;
                    break;
            }

            $("#LoaderDiv").show();
            $("#ResponsePopup").hide();

            console.log("Sending data: " + psData);
            $.ajax({
                url: url,
                type: "POST",
                data: {
                    data: psData,
                    type: dataType
                },
                success: function (data) {
                    $("#ResponseDiv").html(data.Response);
                    $("#ResponsePopup").show();
                    $("#ResponseMessage")
                        .removeClass("alert-danger")
                        .removeClass("alert-success")
                        .addClass(data.Status ? "alert-success" : "alert-danger")
                        .html(data.Message);
                },
                error: function () {
                    alert("Error parsing PS data");
                },
                complete: function () {
                    $("#LoaderDiv").hide();
                }
            });

            //$.post(url, function (data) {
            //    $("#ResponseDiv").html(data.Response);
            //    $("#ResponsePopup").show();
            //    $("#ResponseMessage")
            //        .removeClass("alert-danger")
            //        .removeClass("alert-success")
            //        .addClass(data.Status ? "alert-success" : "alert-danger")
            //        .html(data.Message);
            //    //console.log(data.Response);
            //}).error(function () {
            //    alert("Error parsing PS data");
            //}).always(function () {
            //    $("#LoaderDiv").hide();
            //});
        }

    </script>

}
